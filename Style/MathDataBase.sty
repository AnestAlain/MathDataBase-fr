% !TEX encoding = UTF-8
% !TEX program = lualatex
% !TEX root = ...

\ProvidesExplPackage
  {\CurrentFilePath/MathDataBase}
  {2021/10/04}
  {0.1}
  {A setup package for MDB readmes}
  
\ExplSyntaxOff

\RequirePackage{luacode}

\begin{luacode}
MDB = {
  lfs = require('lfs'),
}

function MDB.directory(file_name)
  local p = MDB.lfs.currentdir() .. package.config:sub(1,1) .. file_name
  local result
  while true do
    local i, j, a
    i, j, a, p = string.find(p, '^([^/\\]*)[/\\]+(.*)$')
    if a then
      result = a
    else
      break
    end
  end
  tex.print(-2, result)
end

\end{luacode}


% set the \l_file_search_path_seq to
% look into the Content and Style folders first.
\ExplSyntaxOn

\tl_set:Nn \MDBLanguage { fr }
\group_begin:
\tl_set_eq:NN \l_tmpa_tl \CurrentFilePath
\regex_replace_once:nnN { / Style $ } { } \l_tmpa_tl
\exp_args:NNNV
\group_end:
\tl_set:Nn \MDBRoot \l_tmpa_tl
\tl_set:Nx \MDBStyle {\MDBRoot / Style }
% \begin{constant} { \MDBRoot }
% The full path of the root directory
% \end{constant}
\exp_args:NNx
\tl_set:Nn \MDBMain {
  \luadirect{ MDB.directory( \luastring{\jobname.tex} ) }
}

\keys_define:nn { MathDataBase } {
  path .code:n = {
    \fancyhead[R] { \MDBMain }
  },
  language .cs_gset:Np = \MDBLanguage,
  unknown .code:n = \PackageError { MathDataBase } {
     You~tried~to~set~unknown~key~'\l_keys_key_str'~to~'#1'.
  },
}
\NewDocumentCommand \MDBSetup { m } {
  \keys_set:nn { MathDataBase } { #1 }
}
\prop_new:N \g_MDB_prop
\prop_new:N \g_MDB_authors_prop

\group_begin:
\file_get:nnNTF {
  \MDBRoot / \MDBLanguage / content.tex
} {} \l_tmpa_tl {
  \regex_replace_once:nnN {
    \s+ (?: \c{ endinput } .* )? $
  } {} \l_tmpa_tl
  \exp_last_unbraced:NNV
  \prop_gset_from_keyval:Nn \g_MDB_prop \l_tmpa_tl
  \prop_get:NnN \g_MDB_prop { authors } \l_tmpa_tl
  \tl_if_empty:NTF \l_tmpa_tl {
    \PackageError{MathDataBase}{Missing~authors~in~\MDBRoot / \MDBLanguage / content.tex}
    \group_end:
  } {
    \exp_args:NNNV
    \group_end:
    \prop_gset_from_keyval:Nn \g_MDB_authors_prop \l_tmpa_tl
  }
} {
  \PackageError{MathDataBase}{No~proper~\MDBRoot / \MDBLanguage / content.tex}
  \group_end:
}

\NewDocumentCommand\MDBAuthorItem { mm } {
  \group_begin:
  \exp_args:NNx
  \prop_set_from_keyval:Nn \l_tmpa_prop {
    \prop_item:Nn \g_MDB_authors_prop { #1 }
  }
  \exp_args:NNx
  \prop_get:NnN \l_tmpa_prop { #2 } \l_tmpa_tl
  \exp_args:NV
  \group_end:
  \l_tmpa_tl
}
\prop_new:N \g_MDB_category_prop
\tl_new:N \MDBCategoryName
\NewDocumentCommand\MDBCategoryRead { m } {
  \group_begin:
  \file_get:nnNTF { \MDBRoot / \MDBLanguage / #1 / content.tex} {} \l_tmpa_tl {
    \regex_replace_once:nnN { \s+ (?: \c{ endinput } .* )? $ } {} \l_tmpa_tl
    \tl_set:Nn \l_tmpb_tl {
      \prop_set_from_keyval:Nn \g_MDB_category_prop
    }
    \exp_args:NNV
    \tl_put_right:Nn \l_tmpb_tl \l_tmpa_tl
    %%
    \tl_put_right:Nn \l_tmpb_tl  {
      \group_begin:
      \prop_get:NnN \g_MDB_category_prop { content } \l_tmpa_tl
      \exp_args:NNNV
      \group_end:
      \seq_set_from_clist:Nn \g_MDB_content_seq \l_tmpa_tl
    }
%    \tl_put_right:Nn \l_tmpb_tl {{}}
    \exp_last_unbraced:NV
    \group_end: \l_tmpb_tl
    \tl_set:Nn \MDBCategoryName { #1 }
    \tl_clear:N \MDBContentName
    \prop_clear:N \g_MDB_content_prop
    \tl_clear:N \MDBVariantName
    \prop_clear:N \g_MDB_variant_prop
  } {
    \PackageError{MathDataBase}{No~proper~file~named:~#1}
    \group_end:
  }
  \ignorespaces
}
\NewDocumentCommand \MDBCategoryForEach { m } {
  \group_begin:
  \prop_if_in:NnTF \g_MDB_prop { categories } {
    \prop_get:NnN \g_MDB_prop { categories } \l_tmpa_tl
    \tl_if_empty:NF \l_tmpa_tl {
      \exp_args:NNV
      \seq_set_from_clist:Nn \l_tmpa_seq \l_tmpa_tl
      \seq_map_inline:Nn \l_tmpa_seq { #1 }
    }
  } {
    \PackageError {MathDataBase} { Missing~categories~key }
  }
  \group_end:
  \ignorespaces
}
\NewDocumentCommand \MDBAuthorsForEach { m } {
  \prop_if_in:NnTF \g_MDB_prop { authors } {
    \group_begin:
    \prop_get:NnN \g_MDB_prop { authors } \l_tmpa_tl
    \tl_if_empty:NF \l_tmpa_tl {
      \exp_last_unbraced:NNV
      \prop_set_from_keyval:Nn \l_tmpa_prop \l_tmpa_tl
      \prop_map_inline:Nn \l_tmpa_prop { #1 }
    }
    \group_end:
  } {
    \PackageError {MathDataBase} { Missing~authors~key }
  }
  \ignorespaces
}
\NewExpandableDocumentCommand \MDBCategoryItem { t! m } {
  \IfBooleanT { #1 } {
    \prop_if_in:NnF \g_MDB_category_prop { #2 } {
      \PackageError {MathDataBase} { Unknown~property~key:~#2 }
    }
  }
  \prop_item:Nn \g_MDB_category_prop { #2 }
  \ignorespaces
}
\seq_new:N \g_MDB_content_seq
\NewDocumentCommand \MDBContentForEach { m } {
  \seq_map_inline:Nn \g_MDB_content_seq { #1 }
  \ignorespaces
}

\NewDocumentCommand \MDBVariantForEach { m } {
  \prop_map_inline:Nn \g_MDB_content_prop { #1 }
  \ignorespaces
}

\NewExpandableDocumentCommand \MDB { m } {
  \group_begin:
  \exp_args:Nnx
  \regex_split:nnNTF { \s*/\s* } { #1 } \l_tmpa_seq {
    \tl_set:Nx \l_tmpa_tl { \seq_item:Nn \l_tmpa_seq 1 }
    \tl_if_eq:NNF \MDBCategory \l_tmpa_tl {
      \exp_args:NV \MDBCategoryRead \l_tmpa_tl
    }
    \tl_set:Nx \l_tmpa_tl { \seq_item:Nn \l_tmpa_seq 2 }
    \tl_if_eq:NNF \MDBContent \l_tmpa_tl {
      \exp_args:NV \MDBContentRead \l_tmpa_tl
    }
    \tl_set:Nx \l_tmpa_tl { \seq_item:Nn \l_tmpa_seq 3 }
    \tl_if_empty:NT \l_tmpa_tl {
      \tl_set:Nn \l_tmpa_tl { base }
    }
    \tl_if_eq:NNF \MDBvariant \l_tmpa_tl {
      \exp_args:NV \MDBVariantRead \l_tmpa_tl
    }
    \tl_set:Nx \l_tmpa_tl { \seq_item:Nn \l_tmpa_seq 4 }
    \tl_if_empty:NT \l_tmpa_tl {
      \tl_set:Nn \l_tmpa_tl { value }
    }
    \exp_args:NNV
    \prop_get:NnNTF \g_MDB_variant_prop \l_tmpa_tl \l_tmpa_tl {
      \exp_args:NV
      \group_end:
      \l_tmpa_tl
    } {
      \PackageError{MathDataBase}{Unknown~value~path:~#1}
      \group_end:
    }
  } {
    \PackageError{MathDataBase}{Bad~value~path:~#1}
    \group_end:
  }
}

\prop_new:N \g_MDB_content_prop
\prop_new:N \g_MDB_variant_prop
\prop_new:N \g_MDB_option_prop
\tl_new:N \MDBContentName
\tl_new:N \MDBVariantName
\NewDocumentCommand\MDBContentRead { m } {
  \group_begin:
  \file_get:nnNTF { \MDBRoot / \MDBLanguage / \MDBCategoryName / Content / #1} {} \l_tmpa_tl {
    \regex_replace_once:nnN { \s+ (?: \c{ endinput } .* )? $ } {} \l_tmpa_tl
    \exp_last_unbraced:NNNV
    \group_end:
    \prop_set_from_keyval:Nn \g_MDB_content_prop \l_tmpa_tl
    \tl_set:Nn \MDBContentName { #1 }
    \prop_clear:N \g_MDB_variant_prop
    \tl_clear:N \MDBVariantName
  } {
    \PackageError{MathDataBase}{No~proper~category/content~pair:^^J\MDBRoot / \MDBLanguage / \MDBCategoryName / Content / #1}
    \group_end:
  }
  \ignorespaces
}

\NewDocumentCommand\MDBVariantRead { m } {
  \group_begin:
  \prop_get:NnNTF \g_MDB_content_prop { #1 } \l_tmpa_tl {
    \exp_args:NNNV
    \group_end:
    \prop_set_from_keyval:Nn \g_MDB_variant_prop \l_tmpa_tl
    \tl_set:Nn \MDBVariantName { #1 }
  } {
    \PackageError{MathDataBase}{No~#1~variant~in:^^J\MDBRoot / \MDBLanguage / \MDBCategoryName / Content / \MDBContentName}
    \group_end:    
  }
  \ignorespaces
}

\NewExpandableDocumentCommand \MDBItem { t! m } {
  \IfBooleanT { #1 } {
    \prop_if_in:NnF \g_MDB_variant_prop { #2 } {
      \PackageError {MathDataBase} { Unknown~content~property~key:~#2 }
      \ignorespaces
    }
  }
  \prop_item:Nn \g_MDB_variant_prop { #2 }
}

\ProvideDocumentCommand \MDBMeta { O{} m } { #2 }
\ProvideDocumentCommand \MDBDefine { O{} m } { #2 }
\ProvideDocumentCommand \MDBIndex { O{} m } { #2 }

\ExplSyntaxOff

\AtBeginDocument{\MDBSetup{}}

\NewDocumentCommand \MDBRequirePackage { O{} m } {
  \RequirePackage[#1]{\MDBRoot/Style/#2}
}

% Page dimensions and layout
\RequirePackage{geometry}
\geometry{a4paper, hmargin={2cm,2cm}, vdivide={2cm,*,2cm},}

\RequirePackage{fancyhdr}
\pagestyle{fancy}
\fancyhead[L]{Base de données mathématiques}
\fancyhead[C]{}
\fancyhead[R]{\jobname}
\fancyfoot[L]{\thepage}
\fancyfoot[C]{}
\fancyfoot[R]{\today}

\RequirePackage{calc}

\RequirePackage{polyglossia}
\setdefaultlanguage{fr}

\RequirePackage{fontspec}

\MDBRequirePackage{math}
\MDBRequirePackage{customize}
\MDBRequirePackage{end}

\endinput
